function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "LogicOP"};
	this.sidHashMap["LogicOP"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "LogicOP:19"};
	this.sidHashMap["LogicOP:19"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "LogicOP:31"};
	this.sidHashMap["LogicOP:31"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Input"] = {sid: "LogicOP:43"};
	this.sidHashMap["LogicOP:43"] = {rtwname: "<Root>/Input"};
	this.rtwnameHashMap["<Root>/Input1"] = {sid: "LogicOP:44"};
	this.sidHashMap["LogicOP:44"] = {rtwname: "<Root>/Input1"};
	this.rtwnameHashMap["<Root>/Subsystem"] = {sid: "LogicOP:19"};
	this.sidHashMap["LogicOP:19"] = {rtwname: "<Root>/Subsystem"};
	this.rtwnameHashMap["<Root>/Out1"] = {sid: "LogicOP:45"};
	this.sidHashMap["LogicOP:45"] = {rtwname: "<Root>/Out1"};
	this.rtwnameHashMap["<Root>/Out2"] = {sid: "LogicOP:49"};
	this.sidHashMap["LogicOP:49"] = {rtwname: "<Root>/Out2"};
	this.rtwnameHashMap["<Root>/Out3"] = {sid: "LogicOP:50"};
	this.sidHashMap["LogicOP:50"] = {rtwname: "<Root>/Out3"};
	this.rtwnameHashMap["<Root>/Out4"] = {sid: "LogicOP:51"};
	this.sidHashMap["LogicOP:51"] = {rtwname: "<Root>/Out4"};
	this.rtwnameHashMap["<Root>/Out5"] = {sid: "LogicOP:52"};
	this.sidHashMap["LogicOP:52"] = {rtwname: "<Root>/Out5"};
	this.rtwnameHashMap["<Root>/Out6"] = {sid: "LogicOP:53"};
	this.sidHashMap["LogicOP:53"] = {rtwname: "<Root>/Out6"};
	this.rtwnameHashMap["<Root>/Out7"] = {sid: "LogicOP:54"};
	this.sidHashMap["LogicOP:54"] = {rtwname: "<Root>/Out7"};
	this.rtwnameHashMap["<S1>/Input"] = {sid: "LogicOP:20"};
	this.sidHashMap["LogicOP:20"] = {rtwname: "<S1>/Input"};
	this.rtwnameHashMap["<S1>/Input1"] = {sid: "LogicOP:21"};
	this.sidHashMap["LogicOP:21"] = {rtwname: "<S1>/Input1"};
	this.rtwnameHashMap["<S1>/Bitwise AND"] = {sid: "LogicOP:5"};
	this.sidHashMap["LogicOP:5"] = {rtwname: "<S1>/Bitwise AND"};
	this.rtwnameHashMap["<S1>/Bitwise NOR"] = {sid: "LogicOP:6"};
	this.sidHashMap["LogicOP:6"] = {rtwname: "<S1>/Bitwise NOR"};
	this.rtwnameHashMap["<S1>/Bitwise NOT"] = {sid: "LogicOP:8"};
	this.sidHashMap["LogicOP:8"] = {rtwname: "<S1>/Bitwise NOT"};
	this.rtwnameHashMap["<S1>/Bitwise NOT1"] = {sid: "LogicOP:40"};
	this.sidHashMap["LogicOP:40"] = {rtwname: "<S1>/Bitwise NOT1"};
	this.rtwnameHashMap["<S1>/Bitwise OR"] = {sid: "LogicOP:4"};
	this.sidHashMap["LogicOP:4"] = {rtwname: "<S1>/Bitwise OR"};
	this.rtwnameHashMap["<S1>/Bitwise XNOR"] = {sid: "LogicOP:31"};
	this.sidHashMap["LogicOP:31"] = {rtwname: "<S1>/Bitwise XNOR"};
	this.rtwnameHashMap["<S1>/Bitwise XOR"] = {sid: "LogicOP:7"};
	this.sidHashMap["LogicOP:7"] = {rtwname: "<S1>/Bitwise XOR"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "LogicOP:22"};
	this.sidHashMap["LogicOP:22"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S1>/Out2"] = {sid: "LogicOP:23"};
	this.sidHashMap["LogicOP:23"] = {rtwname: "<S1>/Out2"};
	this.rtwnameHashMap["<S1>/Out3"] = {sid: "LogicOP:24"};
	this.sidHashMap["LogicOP:24"] = {rtwname: "<S1>/Out3"};
	this.rtwnameHashMap["<S1>/Out4"] = {sid: "LogicOP:25"};
	this.sidHashMap["LogicOP:25"] = {rtwname: "<S1>/Out4"};
	this.rtwnameHashMap["<S1>/Out5"] = {sid: "LogicOP:26"};
	this.sidHashMap["LogicOP:26"] = {rtwname: "<S1>/Out5"};
	this.rtwnameHashMap["<S1>/Out6"] = {sid: "LogicOP:27"};
	this.sidHashMap["LogicOP:27"] = {rtwname: "<S1>/Out6"};
	this.rtwnameHashMap["<S1>/Out7"] = {sid: "LogicOP:41"};
	this.sidHashMap["LogicOP:41"] = {rtwname: "<S1>/Out7"};
	this.rtwnameHashMap["<S2>/In1"] = {sid: "LogicOP:32"};
	this.sidHashMap["LogicOP:32"] = {rtwname: "<S2>/In1"};
	this.rtwnameHashMap["<S2>/In2"] = {sid: "LogicOP:33"};
	this.sidHashMap["LogicOP:33"] = {rtwname: "<S2>/In2"};
	this.rtwnameHashMap["<S2>/Bitwise NOT2"] = {sid: "LogicOP:17"};
	this.sidHashMap["LogicOP:17"] = {rtwname: "<S2>/Bitwise NOT2"};
	this.rtwnameHashMap["<S2>/Bitwise XOR2"] = {sid: "LogicOP:14"};
	this.sidHashMap["LogicOP:14"] = {rtwname: "<S2>/Bitwise XOR2"};
	this.rtwnameHashMap["<S2>/Out1"] = {sid: "LogicOP:34"};
	this.sidHashMap["LogicOP:34"] = {rtwname: "<S2>/Out1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
